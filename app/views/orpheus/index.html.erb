<%= content_for(:title) do %><%= t('.title') %><% end %>

<%= h2_tag('Backstory') %>
<p>
  There is no law in the far reaches of the known universe. Pirates run rampant. Fights break out regularly in the constant struggle for power.
</p>
<p>
  It is here that the Orpheus mining colony detects a valuable cache of resources on a floating asteroid. They quickly land near the deposit and dispatch their SCVs to collect, but a nearby pirate ship has detected their presence and is headed towards them.
</p>
<p>
  As one of the heroes hired to safeguard Orpheus from such threats, you must now prepare for the fight. There's no telling what the pirates may throw at you so you'll need to be ready to change tactics at any time.
</p>

<%= h2_tag('Gameplay') %>
<p>
  Orpheus is a Hero Defense style game. At the start, the game will randomly determine a race for the enemy to play as and each player will pick a <a href="#heroes">hero</a> to play as. Players may pick the same heroes, but a more balanced team of different types of heroes should be ideal. Players' heroes will start near their spawn building within the mining colony and should set out down the chasm towards where the enemy units are attacking from.
</p>
<p>
  The mining colony serves two main purposes: it assists in the fight, and it gathers resources. The colony will routinely send out troops to fight the enemy as well as maintain its own defenses while the SCVs harvest the mineral nodes. Players will receive an income based on how many minerals have been mined. If a defensive building is damaged or destroyed, SCVs will come off the mineral nodes in order to repair the damages, thus slowing player income, so relying on the defenses should be seen as a last resort.
</p>
<p>
  As the game progreses, the enemy will spawn more numerous and more powerful units. Enemy units can also learn upgrades, and each enemy race has its own characteristics that occur throughout the game. Tactics change at random in order to ensure that a single strategy can't always win.. zerg may start with dozens of zerglings that are quick and deadly but fall prey to large area damage, but later switch to rampaging ultralisks that require focused fire to destroy.
</p>
<p>
  To combat this changing threat, the player will be able to change which units spawn from their spawn points and will be able to invest their resources into unit and hero upgrades.
</p>

<%= h2_tag('New Players') %>
<p>
  There will be a few free heroes so that new players can have different options. The game will be balanced in such a way that new players can still contribute even when paired with someone that's unlocked most things.
</p>
<p>
  There will also be a tutorial mode which will award players with game points for completing the tutorial their first time. This should allow them to get either a couple heroes or a few talents for a hero.
</p>

<%= h2_tag('Heroes and Role') %>
<p>
  Unlike traditional games, the heroes don't gain levels in this one. Instead, all stats are purchased with the resources they gain, providing small but frequent progress rather than fighting to get over that next hump while also providing a simple customization method.
</p>
<p>
  Each hero's stats will scale differently. For instance, a hero whose power stat scales at a factor of 5 will gain more power per purchase as one whose power stat scales at a factor of 4. It is expected that players will choose a hero based primarily on how well its abilities suit their playstyle, not on the stat scaling as the difference between a 1 and a 5 should ultimately be fairly minor... ie, twice as much stat, not five times as much.
</p>
<p>
  It is also expected that players will find the most success by not excluding any stats.. a high damage dealer may focus primarily on power but should still want maybe half or a third as much health and mastery in order to stay alive and improve his skills.
</p>

<%= h2_tag('Stats') %>
<p>
  Each hero has 3 primary stats that can be improved via stat purchases: Power, Health, and Mastery. Power will improve a hero's damage. Also, most skills will have their damage scale with power. Health will improve the amount of life and life regeneration that a hero has and commonly improves the hardiness of a skill by extending its duration or increasing how many units it can affect. Mastery will improve the amount of energy and energy regeneration of a hero and commonly improves some unique attribute of a skill. It's intended that players who want to focus on auto attack damage or really big hits will focus on power, players that want to focus on staying alive or crowd control will focus on health, and players who want to focus on crowd control, healing, and more atypical responsibilities will focus on mastery.
</p>

<%= h2_tag('Game Points (GP)') %>
<p>
  For playing well, players will be rewarded with game points (GP). This form of currency may be spent at the beginning of the game to permanently unlock new heroes and talents.
</p>
<p>
  Unlockable elements of the game will help you to create a fully fleshed out hero, but will not necessarily help to create a more powerful hero. This way, a veteran player should not feel severely hampered playing with novices and novices should not feel useless.
</p>

<%= h2_tag('Skills') %>
<p>
  Each hero will have a passive trait, 3 active skills, and an ultimate. The ultimate will be free to cast but have a long cooldown, while the active skills will have no CD but consume large amounts of mana.
</p>

<%= h2_tag('Difficulty') %>
<p>
  Since every hero is more or less equal in terms of capability, the game will provide a moderate challenge for most players so much so that it may even adjust itself based on how well the group is doing. However, a difficulty setting may be chosen when creating the game for the lobby. It's recommended to play on Normal difficulty for pub games, but premade groups and those looking for a challenge may choose something more suited to their skills.
</p>

<%= h2_tag('Income') %>
<p>
  Periodically, players will receive income.. a small amount of experience based on how many minerals the colony has mined thus far, divided evenly amongst the remaining players.
</p>
<p>
  As an example, if income is given out every second equal to 10% of the minerals mined and the colony has mined 80 minerals at a given point in time then each player will receive 2 experience assuming there's 4 players. A solo player would receive 8 and 3 players would each receive 2.666 experience. The display of experience will always be rounded down for simplicity, but the fractional value will count.
</p>
<p>
  There are a few goals accomplished by this system. One is that fewer active players will receive more income so players may stand a chance at playing a solo game if that's how they prefer to play (albeit it would be difficult and the GP reward would not be any greater). The other is that if a team is not performing well, SCVs will be taken away from harvesting in order to perform repairs so the income scaling will slow down or possibly stagnate, providing incentive to keep the fight away from the colony as much as possible, and helping to avoid a situation where the players are just barely surviving for a long period of time.. without the income, they're likely to just die quicker, which is likely to happen regardless once the fight pushes to the base.
</p>

<!--

<%= h2_tag('Interfaces') %>

<%= h2_tag('Hero Selection Interface') %>
<div class="interface">
  <div class="interface-menu">
    <ol>
      <li class="current">Hero</li>
      <li>Skills</li>
      <li>Talents</li>
    </ol>
  </div>
</div>

<%= h2_tag('Skill Selection Interface') %>

<%= h2_tag('Talent Selection Interface') %>

<%= h2_tag('Game Interface') %>
-->

<%= h2_tag('Heroes') %>
<%= render partial: 'hero', locals: {
  name: 'Raynor',
  power: 3,
  health: 3,
  mastery: 3,
  abilities: [
    {
      name: 'Power Blast',
      description: 'Fires a super-charged blast that damages enemies in a line',
      stats: [
        [ 'Damage', '100|P' ],
        [ 'Impact Area', '2|P yards' ],
        [ 'Range', '3|M yards' ]
      ]
    },
    {
      name: '',
      description: '',
      stats: [
      ]
    },
    {
      name: '',
      description: '',
      stats: [
      ]
    },
    {
      name: '',
      description: '',
      stats: [
      ]
    }
  ],
  units: [
    {
      name: 'Marine',
      description: 'Light combat unit for attacking ground and air units'
    },
    {
      name: 'Medic',
      description: 'Support unit that can continuously heal a nearby friendly unit'
    },
    {
      name: 'Marauder',
      description: 'Armored combat unit effective against armored ground units'
    }
  ],
  talents: [
    {
      name: '',
      description: ''
    }
  ]
} %>

<!--

<%= h2_tag('Skills') %>
<p>
  Skill idea: each skill has an elemental alignment.
  Get 3 skills of a single alignment and unlock that alignment's passive.
  <br />
  <br />
  Air ()<br />
  &nbsp; Light, sharp
  <ul>
    <li></li>
  </ul>
  Death ()<br />
  &nbsp; Decay, slowing, weakening
  <ul>
    <li>Raise Dead (Summon)</li>
  </ul>
  Earth ()<br />
  &nbsp; Slow, steady, unmoving
  <ul>
    <li></li>
  </ul>
  Fire ()<br />
  &nbsp; Uncontrollable, spreads, consumes
  <ul>
    <li></li>
  </ul>
  Life ()<br />
  &nbsp; Healing, empowering
  <ul>
    <li></li>
  </ul>
  Lightning (Randomly releases bolts at nearby units)<br />
  &nbsp; Unpredictable, instantaneous, surging
  <ul>
    <li>Chain Lightning (Single Target)</li>
    <li>Forked Lightning</li>
    <li>Thunderstorm (Area Target)</li>
  </ul>
  Nature ()<br />
  &nbsp; Envelops, grows, persists
  <ul>
    <li>Call Familar (Summon)</li>
  </ul>
  Water ()<br />
  &nbsp; Constant, quenches, erodes
  <ul>
    <li>Whirlpool (Area Target)</li>
  </ul>
</p>
<div template-source="skills2">
  <div class="skill-card">
    <h3 class="skill-name">{{name}}</h3>
    <div class="skill-cost">{% if something.cost %}{{cost}} <span class="gp">GP</span>{% else %}FREE{% endif %}</div>
    <div class="skill-description">((translate description))</div>
    <div class="skill-modifiers">
      <div class="skill-modifier skill-modifier-power">
        <h4 class="skill-modifier-name power">{{power.name}}</h4>
        <div class="skill-modifier-description">((translate power.description))</div>
      </div>
      <div class="skill-modifier skill-modifier-health">
        <h4 class="skill-modifier-name health">{{health.name}}</h4>
        <div class="skill-modifier-description">((translate health.description))</div>
      </div>
      <div class="skill-modifier skill-modifier-mastery">
        <h4 class="skill-modifier-name mastery">{{mastery.name}}</h4>
        <div class="skill-modifier-description">((translate mastery.description))</div>
      </div>
      <div class="skill-modifier skill-modifier-ultimate">
        <h4 class="skill-modifier-name ultimate">{{ultimate.name}}</h4>
        <div class="skill-modifier-description">((translate ultimate.description))</div>
      </div>
    </div>
  </div>
</div>
-->

<%= h2_tag('Enemy Spawns') %>
{% for spawn in orpheus.spawns %}
  <div class="spawn-card">
    {{orpheus.heading[spawn.name]}}
    <div class="spawn-value">{{spawn.value}}</div>
    <div class="spawn-description">{{spawn.description}}</div>
    <div class="spawn-evolutions">
      {% for evolution in spawn.evolutions %}
        <div class="spawn-evolution">
          {{orpheus.heading[evolution.name]}}
          <div class="spawn-evolution-value">{{evolution.value}}</div>
          <div class="spawn-evolution-description">
            {{evolution.description}}
          </div>
        </div>
      {% endfor %}
    </div>
    <div class="spawn-mutations">
      {% for mutation in mutations %}
        <div class="spawn-mutation">
          {{orpheus.heading[mutation.name]}}
          <div class="spawn-mutation-description">
            {{mutation.description}}
          </div>
        </div>
      {% endfor %}
    </div>
  </div>
{% endfor %}

<%= h2_tag('Enemy Minions') %>
{% for minion in orpheus.minions %}
  <div class="spawn-card">
    {{orpheus.heading[minion.name]}}
    <div class="spawn-value">{{minion.value}}</div>
    <div class="spawn-description">{{minion.description}}</div>
  </div>
{% endfor %}

<!--
<p>
  01 aberration<br />
  02 baneling (hunter|splitterling)<br />
  03 brutalisk<br />
  04 corruptor<br />
  05 defiler?<br />
  06 devourer<br />
  07 drone<br />
  08 guardian<br />
  09 hydralisk (impaler|lurker)<br />
  10 infestor<br />
  11 larva (swarm queen larva)<br />
  12 mutalisk (brood lord|viper)<br />
  13 overlord (provides a radius buff, creates creep which buffs?)<br />
  14 overseer (casts a targeted buff?)<br />
  15 queen (flying?)<br />
  16 roach (corpser|vile)<br />
  17 scourge<br />
  18 swarm host (w/ locust, flying locust, primal flying locust) (carrion|creeper)<br />
  19 ultralisk (noxious|torrasque)<br />
  20 zergling (raptor|swarmling)<br />
  <br />
  01 alexei stukov<br />
  02 brakk<br />
  03 dehaka<br />
  04 kraith<br />
  05 slivan<br />
  06 yagdra (w/ ash worms?)<br />
  <br />
  01 mitoscarab?<br />
  02 primal guardian<br />
  03 primal hydralisk<br />
  04 primal larva<br />
  05 primal mutalisk<br />
  06 primal roach<br />
  07 primal ultralisk<br />
  08 primal zergling<br />
  09 quillgor?<br />
  10 ravasaur?<br />
  111 tyrannozor<br />
  <br />
  - use primals as bosses?<br />
  - use primals in an event?<br />
  - primals as regular wave spawns?<br />
</p>
-->

<%= h2_tag('Waves') %>
<div class="horizontal-scroll">
  <table class="data-table">
    <thead>
      <tr>
        <th>Frequency</th>
        <th>Units</th>
        <th>Spawn Value</th>
        <th>Strength</th>
      </tr>
    </thead>
    <tbody>
      {% for wave in orpheus.waves %}
        <tr>
          <td>{{wave.frequency}}</td>
          <td>
            {% for unit in wave.units %}
              {{unit.count}}x {{unit.unit.name}}<br />
            {% endfor %}
          </td>
          <td>{{wave.value}}</td>
          <td>{{wave.strength}}</td>
        </tr>
      {% endfor %}
    </tbody>
  </table>
</div>

<%= h2_tag('Events') %>

<%= h2_tag('Bosses') %>
